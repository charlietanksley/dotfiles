# set-option -g prefix C-u
# unbind-key C-b
# bind-key C-u send-prefix

# Make clipboard work!
# set-option -g default-command "reattach-to-user-namespace -l bash"

# Set it to work with zsh
# set-option -g default-command $SHELL

# If I'm going to try using Tmux a bit more, I should have some good
# customizations.  Steal Steve Losh's until I find a time to make it my own:

# Relax!
set -sg escape-time 0
set -sg repeat-time 600

# Reload the config.
bind r source-file ~/.tmux.conf \; display "Reloaded ~/.tmux.conf"

# Saner splitting.
bind v split-window -h
bind s split-window -v
bind S choose-session

# Pane movement
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# DVTM style pane selection
# In this version, panes are more important than windows.  To switch windows,
# use `' index`.
bind 0 select-pane -t 0
bind 1 select-pane -t 1
bind 2 select-pane -t 2
bind 3 select-pane -t 3
bind 4 select-pane -t 4
bind 5 select-pane -t 5
bind 6 select-pane -t 6
bind 7 select-pane -t 7
bind 8 select-pane -t 8
bind 9 select-pane -t 9

# Pane resizing
bind -r C-h resize-pane -L 5
bind -r C-j resize-pane -D 5
bind -r C-k resize-pane -U 5
bind -r C-l resize-pane -R 5

# 256 colors please
set -g default-terminal "screen-256color"

# Bad Wolf
set -g status-fg white
set -g status-bg colour234
set -g window-status-activity-attr bold
set -g pane-border-fg colour245
set -g pane-active-border-fg colour39
set -g message-fg colour16
set -g message-bg colour221
set -g message-attr bold

# Custom status bar
set -g status-left-length 32
set -g status-right-length 150
set -g status-interval 5

set -g status-left '#[fg=colour16,bg=colour254,bold] #S '

set -g status-right '#[fg=colour245]%R %d %b #h'

set -g window-status-format "#[fg=white,bg=colour234] #I #W "
set -g window-status-current-format "#[fg=colour234,bg=colour39] #[fg=colour16,bg=colour39,noreverse,bold] #I #W #[fg=colour39,bg=colour234,nobold]"

# Activity
setw -g monitor-activity on
set -g visual-activity off

# Autorename sanely.
setw -g automatic-rename on

# Better name management
bind c new-window \; command-prompt "rename-window '%%'"
bind C new-window
bind , command-prompt "rename-window '%%'"

# Copy mode
# setw -g mode-keys vi
# bind ` copy-mode
# unbind [
# unbind p
# bind p paste-buffer
# bind -t vi-copy v begin-selection
# bind -t vi-copy y copy-selection
# bind -t vi-copy Escape cancel
